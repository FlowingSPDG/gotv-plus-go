// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gotv_plus.proto

package GOTV_PLUS

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Match struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Match) Reset()         { *m = Match{} }
func (m *Match) String() string { return proto.CompactTextString(m) }
func (*Match) ProtoMessage()    {}
func (*Match) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8a69789a3c4d4fd, []int{0}
}

func (m *Match) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Match.Unmarshal(m, b)
}
func (m *Match) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Match.Marshal(b, m, deterministic)
}
func (m *Match) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Match.Merge(m, src)
}
func (m *Match) XXX_Size() int {
	return xxx_messageInfo_Match.Size(m)
}
func (m *Match) XXX_DiscardUnknown() {
	xxx_messageInfo_Match.DiscardUnknown(m)
}

var xxx_messageInfo_Match proto.InternalMessageInfo

func (m *Match) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Match) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetMatchesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMatchesRequest) Reset()         { *m = GetMatchesRequest{} }
func (m *GetMatchesRequest) String() string { return proto.CompactTextString(m) }
func (*GetMatchesRequest) ProtoMessage()    {}
func (*GetMatchesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8a69789a3c4d4fd, []int{1}
}

func (m *GetMatchesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMatchesRequest.Unmarshal(m, b)
}
func (m *GetMatchesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMatchesRequest.Marshal(b, m, deterministic)
}
func (m *GetMatchesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMatchesRequest.Merge(m, src)
}
func (m *GetMatchesRequest) XXX_Size() int {
	return xxx_messageInfo_GetMatchesRequest.Size(m)
}
func (m *GetMatchesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMatchesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMatchesRequest proto.InternalMessageInfo

type GetMatchesReply struct {
	Match                []*Match `protobuf:"bytes,1,rep,name=match,proto3" json:"match,omitempty"`
	Error                bool     `protobuf:"varint,2,opt,name=error,proto3" json:"error,omitempty"`
	Errormessage         string   `protobuf:"bytes,3,opt,name=errormessage,proto3" json:"errormessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMatchesReply) Reset()         { *m = GetMatchesReply{} }
func (m *GetMatchesReply) String() string { return proto.CompactTextString(m) }
func (*GetMatchesReply) ProtoMessage()    {}
func (*GetMatchesReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8a69789a3c4d4fd, []int{2}
}

func (m *GetMatchesReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMatchesReply.Unmarshal(m, b)
}
func (m *GetMatchesReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMatchesReply.Marshal(b, m, deterministic)
}
func (m *GetMatchesReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMatchesReply.Merge(m, src)
}
func (m *GetMatchesReply) XXX_Size() int {
	return xxx_messageInfo_GetMatchesReply.Size(m)
}
func (m *GetMatchesReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMatchesReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetMatchesReply proto.InternalMessageInfo

func (m *GetMatchesReply) GetMatch() []*Match {
	if m != nil {
		return m.Match
	}
	return nil
}

func (m *GetMatchesReply) GetError() bool {
	if m != nil {
		return m.Error
	}
	return false
}

func (m *GetMatchesReply) GetErrormessage() string {
	if m != nil {
		return m.Errormessage
	}
	return ""
}

type GetMatchRequest struct {
	// Types that are valid to be assigned to Ids:
	//	*GetMatchRequest_Token
	//	*GetMatchRequest_Id
	Ids                  isGetMatchRequest_Ids `protobuf_oneof:"ids"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GetMatchRequest) Reset()         { *m = GetMatchRequest{} }
func (m *GetMatchRequest) String() string { return proto.CompactTextString(m) }
func (*GetMatchRequest) ProtoMessage()    {}
func (*GetMatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8a69789a3c4d4fd, []int{3}
}

func (m *GetMatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMatchRequest.Unmarshal(m, b)
}
func (m *GetMatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMatchRequest.Marshal(b, m, deterministic)
}
func (m *GetMatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMatchRequest.Merge(m, src)
}
func (m *GetMatchRequest) XXX_Size() int {
	return xxx_messageInfo_GetMatchRequest.Size(m)
}
func (m *GetMatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMatchRequest proto.InternalMessageInfo

type isGetMatchRequest_Ids interface {
	isGetMatchRequest_Ids()
}

type GetMatchRequest_Token struct {
	Token string `protobuf:"bytes,1,opt,name=token,proto3,oneof"`
}

type GetMatchRequest_Id struct {
	Id string `protobuf:"bytes,2,opt,name=id,proto3,oneof"`
}

func (*GetMatchRequest_Token) isGetMatchRequest_Ids() {}

func (*GetMatchRequest_Id) isGetMatchRequest_Ids() {}

func (m *GetMatchRequest) GetIds() isGetMatchRequest_Ids {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *GetMatchRequest) GetToken() string {
	if x, ok := m.GetIds().(*GetMatchRequest_Token); ok {
		return x.Token
	}
	return ""
}

func (m *GetMatchRequest) GetId() string {
	if x, ok := m.GetIds().(*GetMatchRequest_Id); ok {
		return x.Id
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GetMatchRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GetMatchRequest_Token)(nil),
		(*GetMatchRequest_Id)(nil),
	}
}

type DeleteMatchRequest struct {
	// Types that are valid to be assigned to Ids:
	//	*DeleteMatchRequest_Token
	//	*DeleteMatchRequest_Id
	Ids                  isDeleteMatchRequest_Ids `protobuf_oneof:"ids"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *DeleteMatchRequest) Reset()         { *m = DeleteMatchRequest{} }
func (m *DeleteMatchRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteMatchRequest) ProtoMessage()    {}
func (*DeleteMatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8a69789a3c4d4fd, []int{4}
}

func (m *DeleteMatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteMatchRequest.Unmarshal(m, b)
}
func (m *DeleteMatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteMatchRequest.Marshal(b, m, deterministic)
}
func (m *DeleteMatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteMatchRequest.Merge(m, src)
}
func (m *DeleteMatchRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteMatchRequest.Size(m)
}
func (m *DeleteMatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteMatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteMatchRequest proto.InternalMessageInfo

type isDeleteMatchRequest_Ids interface {
	isDeleteMatchRequest_Ids()
}

type DeleteMatchRequest_Token struct {
	Token string `protobuf:"bytes,1,opt,name=token,proto3,oneof"`
}

type DeleteMatchRequest_Id struct {
	Id string `protobuf:"bytes,2,opt,name=id,proto3,oneof"`
}

func (*DeleteMatchRequest_Token) isDeleteMatchRequest_Ids() {}

func (*DeleteMatchRequest_Id) isDeleteMatchRequest_Ids() {}

func (m *DeleteMatchRequest) GetIds() isDeleteMatchRequest_Ids {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *DeleteMatchRequest) GetToken() string {
	if x, ok := m.GetIds().(*DeleteMatchRequest_Token); ok {
		return x.Token
	}
	return ""
}

func (m *DeleteMatchRequest) GetId() string {
	if x, ok := m.GetIds().(*DeleteMatchRequest_Id); ok {
		return x.Id
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DeleteMatchRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DeleteMatchRequest_Token)(nil),
		(*DeleteMatchRequest_Id)(nil),
	}
}

type DeleteMatchReply struct {
	Error                bool     `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Errormessage         string   `protobuf:"bytes,2,opt,name=errormessage,proto3" json:"errormessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteMatchReply) Reset()         { *m = DeleteMatchReply{} }
func (m *DeleteMatchReply) String() string { return proto.CompactTextString(m) }
func (*DeleteMatchReply) ProtoMessage()    {}
func (*DeleteMatchReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8a69789a3c4d4fd, []int{5}
}

func (m *DeleteMatchReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteMatchReply.Unmarshal(m, b)
}
func (m *DeleteMatchReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteMatchReply.Marshal(b, m, deterministic)
}
func (m *DeleteMatchReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteMatchReply.Merge(m, src)
}
func (m *DeleteMatchReply) XXX_Size() int {
	return xxx_messageInfo_DeleteMatchReply.Size(m)
}
func (m *DeleteMatchReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteMatchReply.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteMatchReply proto.InternalMessageInfo

func (m *DeleteMatchReply) GetError() bool {
	if m != nil {
		return m.Error
	}
	return false
}

func (m *DeleteMatchReply) GetErrormessage() string {
	if m != nil {
		return m.Errormessage
	}
	return ""
}

type MarkIDRequest struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarkIDRequest) Reset()         { *m = MarkIDRequest{} }
func (m *MarkIDRequest) String() string { return proto.CompactTextString(m) }
func (*MarkIDRequest) ProtoMessage()    {}
func (*MarkIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8a69789a3c4d4fd, []int{6}
}

func (m *MarkIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarkIDRequest.Unmarshal(m, b)
}
func (m *MarkIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarkIDRequest.Marshal(b, m, deterministic)
}
func (m *MarkIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarkIDRequest.Merge(m, src)
}
func (m *MarkIDRequest) XXX_Size() int {
	return xxx_messageInfo_MarkIDRequest.Size(m)
}
func (m *MarkIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MarkIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MarkIDRequest proto.InternalMessageInfo

func (m *MarkIDRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *MarkIDRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type MarkIDReply struct {
	Error                bool     `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Errormessage         string   `protobuf:"bytes,2,opt,name=errormessage,proto3" json:"errormessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarkIDReply) Reset()         { *m = MarkIDReply{} }
func (m *MarkIDReply) String() string { return proto.CompactTextString(m) }
func (*MarkIDReply) ProtoMessage()    {}
func (*MarkIDReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8a69789a3c4d4fd, []int{7}
}

func (m *MarkIDReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarkIDReply.Unmarshal(m, b)
}
func (m *MarkIDReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarkIDReply.Marshal(b, m, deterministic)
}
func (m *MarkIDReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarkIDReply.Merge(m, src)
}
func (m *MarkIDReply) XXX_Size() int {
	return xxx_messageInfo_MarkIDReply.Size(m)
}
func (m *MarkIDReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MarkIDReply.DiscardUnknown(m)
}

var xxx_messageInfo_MarkIDReply proto.InternalMessageInfo

func (m *MarkIDReply) GetError() bool {
	if m != nil {
		return m.Error
	}
	return false
}

func (m *MarkIDReply) GetErrormessage() string {
	if m != nil {
		return m.Errormessage
	}
	return ""
}

type SaveMatchToFileRequest struct {
	// Types that are valid to be assigned to Ids:
	//	*SaveMatchToFileRequest_Token
	//	*SaveMatchToFileRequest_Id
	Ids                  isSaveMatchToFileRequest_Ids `protobuf_oneof:"ids"`
	Path                 string                       `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *SaveMatchToFileRequest) Reset()         { *m = SaveMatchToFileRequest{} }
func (m *SaveMatchToFileRequest) String() string { return proto.CompactTextString(m) }
func (*SaveMatchToFileRequest) ProtoMessage()    {}
func (*SaveMatchToFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8a69789a3c4d4fd, []int{8}
}

func (m *SaveMatchToFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveMatchToFileRequest.Unmarshal(m, b)
}
func (m *SaveMatchToFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveMatchToFileRequest.Marshal(b, m, deterministic)
}
func (m *SaveMatchToFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveMatchToFileRequest.Merge(m, src)
}
func (m *SaveMatchToFileRequest) XXX_Size() int {
	return xxx_messageInfo_SaveMatchToFileRequest.Size(m)
}
func (m *SaveMatchToFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveMatchToFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SaveMatchToFileRequest proto.InternalMessageInfo

type isSaveMatchToFileRequest_Ids interface {
	isSaveMatchToFileRequest_Ids()
}

type SaveMatchToFileRequest_Token struct {
	Token string `protobuf:"bytes,1,opt,name=token,proto3,oneof"`
}

type SaveMatchToFileRequest_Id struct {
	Id string `protobuf:"bytes,2,opt,name=id,proto3,oneof"`
}

func (*SaveMatchToFileRequest_Token) isSaveMatchToFileRequest_Ids() {}

func (*SaveMatchToFileRequest_Id) isSaveMatchToFileRequest_Ids() {}

func (m *SaveMatchToFileRequest) GetIds() isSaveMatchToFileRequest_Ids {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *SaveMatchToFileRequest) GetToken() string {
	if x, ok := m.GetIds().(*SaveMatchToFileRequest_Token); ok {
		return x.Token
	}
	return ""
}

func (m *SaveMatchToFileRequest) GetId() string {
	if x, ok := m.GetIds().(*SaveMatchToFileRequest_Id); ok {
		return x.Id
	}
	return ""
}

func (m *SaveMatchToFileRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SaveMatchToFileRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SaveMatchToFileRequest_Token)(nil),
		(*SaveMatchToFileRequest_Id)(nil),
	}
}

type SaveMatchToFileReply struct {
	Error                bool     `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Errormessage         string   `protobuf:"bytes,2,opt,name=errormessage,proto3" json:"errormessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SaveMatchToFileReply) Reset()         { *m = SaveMatchToFileReply{} }
func (m *SaveMatchToFileReply) String() string { return proto.CompactTextString(m) }
func (*SaveMatchToFileReply) ProtoMessage()    {}
func (*SaveMatchToFileReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8a69789a3c4d4fd, []int{9}
}

func (m *SaveMatchToFileReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveMatchToFileReply.Unmarshal(m, b)
}
func (m *SaveMatchToFileReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveMatchToFileReply.Marshal(b, m, deterministic)
}
func (m *SaveMatchToFileReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveMatchToFileReply.Merge(m, src)
}
func (m *SaveMatchToFileReply) XXX_Size() int {
	return xxx_messageInfo_SaveMatchToFileReply.Size(m)
}
func (m *SaveMatchToFileReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveMatchToFileReply.DiscardUnknown(m)
}

var xxx_messageInfo_SaveMatchToFileReply proto.InternalMessageInfo

func (m *SaveMatchToFileReply) GetError() bool {
	if m != nil {
		return m.Error
	}
	return false
}

func (m *SaveMatchToFileReply) GetErrormessage() string {
	if m != nil {
		return m.Errormessage
	}
	return ""
}

type LoadMatchFromFileRequest struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoadMatchFromFileRequest) Reset()         { *m = LoadMatchFromFileRequest{} }
func (m *LoadMatchFromFileRequest) String() string { return proto.CompactTextString(m) }
func (*LoadMatchFromFileRequest) ProtoMessage()    {}
func (*LoadMatchFromFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8a69789a3c4d4fd, []int{10}
}

func (m *LoadMatchFromFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadMatchFromFileRequest.Unmarshal(m, b)
}
func (m *LoadMatchFromFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadMatchFromFileRequest.Marshal(b, m, deterministic)
}
func (m *LoadMatchFromFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadMatchFromFileRequest.Merge(m, src)
}
func (m *LoadMatchFromFileRequest) XXX_Size() int {
	return xxx_messageInfo_LoadMatchFromFileRequest.Size(m)
}
func (m *LoadMatchFromFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadMatchFromFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoadMatchFromFileRequest proto.InternalMessageInfo

func (m *LoadMatchFromFileRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type LoadMatchFromFileReply struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Error                bool     `protobuf:"varint,2,opt,name=error,proto3" json:"error,omitempty"`
	Errormessage         string   `protobuf:"bytes,3,opt,name=errormessage,proto3" json:"errormessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoadMatchFromFileReply) Reset()         { *m = LoadMatchFromFileReply{} }
func (m *LoadMatchFromFileReply) String() string { return proto.CompactTextString(m) }
func (*LoadMatchFromFileReply) ProtoMessage()    {}
func (*LoadMatchFromFileReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8a69789a3c4d4fd, []int{11}
}

func (m *LoadMatchFromFileReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadMatchFromFileReply.Unmarshal(m, b)
}
func (m *LoadMatchFromFileReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadMatchFromFileReply.Marshal(b, m, deterministic)
}
func (m *LoadMatchFromFileReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadMatchFromFileReply.Merge(m, src)
}
func (m *LoadMatchFromFileReply) XXX_Size() int {
	return xxx_messageInfo_LoadMatchFromFileReply.Size(m)
}
func (m *LoadMatchFromFileReply) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadMatchFromFileReply.DiscardUnknown(m)
}

var xxx_messageInfo_LoadMatchFromFileReply proto.InternalMessageInfo

func (m *LoadMatchFromFileReply) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *LoadMatchFromFileReply) GetError() bool {
	if m != nil {
		return m.Error
	}
	return false
}

func (m *LoadMatchFromFileReply) GetErrormessage() string {
	if m != nil {
		return m.Errormessage
	}
	return ""
}

func init() {
	proto.RegisterType((*Match)(nil), "GOTV_PLUS.Match")
	proto.RegisterType((*GetMatchesRequest)(nil), "GOTV_PLUS.GetMatchesRequest")
	proto.RegisterType((*GetMatchesReply)(nil), "GOTV_PLUS.GetMatchesReply")
	proto.RegisterType((*GetMatchRequest)(nil), "GOTV_PLUS.GetMatchRequest")
	proto.RegisterType((*DeleteMatchRequest)(nil), "GOTV_PLUS.DeleteMatchRequest")
	proto.RegisterType((*DeleteMatchReply)(nil), "GOTV_PLUS.DeleteMatchReply")
	proto.RegisterType((*MarkIDRequest)(nil), "GOTV_PLUS.MarkIDRequest")
	proto.RegisterType((*MarkIDReply)(nil), "GOTV_PLUS.MarkIDReply")
	proto.RegisterType((*SaveMatchToFileRequest)(nil), "GOTV_PLUS.SaveMatchToFileRequest")
	proto.RegisterType((*SaveMatchToFileReply)(nil), "GOTV_PLUS.SaveMatchToFileReply")
	proto.RegisterType((*LoadMatchFromFileRequest)(nil), "GOTV_PLUS.LoadMatchFromFileRequest")
	proto.RegisterType((*LoadMatchFromFileReply)(nil), "GOTV_PLUS.LoadMatchFromFileReply")
}

func init() { proto.RegisterFile("gotv_plus.proto", fileDescriptor_d8a69789a3c4d4fd) }

var fileDescriptor_d8a69789a3c4d4fd = []byte{
	// 444 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xf5, 0x07, 0xae, 0xda, 0x09, 0x90, 0x74, 0xa8, 0x2c, 0xcb, 0x80, 0x68, 0x17, 0x09, 0xf5,
	0x42, 0x84, 0x8a, 0xb8, 0x20, 0x4e, 0x55, 0x69, 0x82, 0x48, 0x45, 0xe5, 0x06, 0x38, 0x45, 0x91,
	0xc1, 0xab, 0xc4, 0x8a, 0xc3, 0x1a, 0xef, 0x26, 0x52, 0xfe, 0x27, 0x3f, 0x08, 0x79, 0xd7, 0x4e,
	0xd6, 0xd8, 0x89, 0x80, 0xdc, 0xbc, 0x3b, 0x33, 0xef, 0xcd, 0x9b, 0x7d, 0x63, 0x68, 0x4f, 0x98,
	0x58, 0x8e, 0xd3, 0x64, 0xc1, 0xbb, 0x69, 0xc6, 0x04, 0xc3, 0xa3, 0xde, 0xa7, 0xe1, 0x97, 0xf1,
	0xed, 0xe0, 0xf3, 0x1d, 0x79, 0x09, 0xce, 0x4d, 0x28, 0xbe, 0x4f, 0xf1, 0x04, 0x1c, 0xc1, 0x66,
	0xf4, 0x87, 0x67, 0x9e, 0x9a, 0xe7, 0x47, 0x81, 0x3a, 0xe0, 0x43, 0xb0, 0xe2, 0xc8, 0xb3, 0xe4,
	0x95, 0x15, 0x47, 0xe4, 0x11, 0x1c, 0xf7, 0xa8, 0x90, 0x15, 0x94, 0x07, 0xf4, 0xe7, 0x82, 0x72,
	0x41, 0x38, 0xb4, 0xf5, 0xcb, 0x34, 0x59, 0xe1, 0x0b, 0x70, 0xe6, 0xf9, 0xd9, 0x33, 0x4f, 0xed,
	0xf3, 0xd6, 0x45, 0xa7, 0xbb, 0x66, 0xec, 0xca, 0xbc, 0x40, 0x85, 0x73, 0x56, 0x9a, 0x65, 0x2c,
	0x93, 0x14, 0x87, 0x81, 0x3a, 0x20, 0x81, 0xfb, 0xf2, 0x63, 0x4e, 0x39, 0x0f, 0x27, 0xd4, 0xb3,
	0x25, 0x7f, 0xe5, 0x8e, 0x5c, 0x6e, 0x48, 0x8b, 0x3e, 0xd0, 0xad, 0x48, 0xe8, 0x1b, 0xa5, 0x88,
	0xce, 0x46, 0x44, 0xdf, 0xc8, 0x65, 0x5c, 0x3a, 0x60, 0xc7, 0x11, 0x27, 0xef, 0x01, 0xaf, 0x68,
	0x42, 0x05, 0xdd, 0x0f, 0x66, 0x00, 0x9d, 0x0a, 0x4c, 0x3e, 0x80, 0xb5, 0x30, 0x73, 0x97, 0x30,
	0xab, 0x41, 0xd8, 0x1b, 0x78, 0x70, 0x13, 0x66, 0xb3, 0x0f, 0x57, 0x65, 0x3f, 0x7f, 0xf7, 0x32,
	0x3d, 0x68, 0x95, 0x65, 0xfb, 0xf1, 0x8f, 0xc0, 0xbd, 0x0b, 0x97, 0x4a, 0xcb, 0x90, 0x5d, 0xc7,
	0x09, 0xfd, 0xe7, 0xc1, 0x20, 0xc2, 0xbd, 0x34, 0x14, 0xd3, 0xe2, 0xe1, 0xe4, 0x77, 0x39, 0xac,
	0x5b, 0x38, 0xa9, 0xc1, 0xef, 0xd7, 0xf0, 0x2b, 0xf0, 0x06, 0x2c, 0x8c, 0x24, 0xe2, 0x75, 0xc6,
	0xe6, 0x7a, 0xcb, 0x8d, 0xb3, 0x23, 0x53, 0x70, 0x1b, 0x2a, 0x8a, 0x2e, 0x1a, 0x66, 0xfd, 0xdf,
	0x2e, 0xbd, 0xf8, 0x65, 0x43, 0xb1, 0x6c, 0xc9, 0x82, 0x63, 0x1f, 0x60, 0xb3, 0x28, 0xf8, 0x44,
	0x5b, 0x8a, 0xda, 0x52, 0xf9, 0xfe, 0x96, 0x68, 0x9a, 0xac, 0x88, 0x81, 0x6f, 0xe1, 0xb0, 0xbc,
	0xc4, 0xa6, 0xcc, 0x12, 0xa5, 0xb6, 0x78, 0xc4, 0xc0, 0x8f, 0xd0, 0xd2, 0xec, 0x8a, 0x4f, 0xb5,
	0x94, 0xfa, 0x36, 0xf8, 0x8f, 0xb7, 0x85, 0x55, 0x23, 0xef, 0xe0, 0x40, 0xd9, 0x0e, 0xbd, 0x0a,
	0x95, 0x66, 0x60, 0xdf, 0x6d, 0x88, 0xa8, 0xea, 0xaf, 0xd0, 0xfe, 0xc3, 0x0c, 0x78, 0xa6, 0x25,
	0x37, 0xfb, 0xd0, 0x7f, 0xb6, 0x2b, 0x45, 0x01, 0x8f, 0xe0, 0xb8, 0xf6, 0xc2, 0xf8, 0x5c, 0xab,
	0xdb, 0xe6, 0x18, 0xff, 0x6c, 0x77, 0x92, 0x84, 0xff, 0x76, 0x20, 0xff, 0xa3, 0xaf, 0x7f, 0x07,
	0x00, 0x00, 0xff, 0xff, 0xbd, 0x9c, 0x32, 0x94, 0x5a, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GOTV_PlusClient is the client API for GOTV_Plus service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GOTV_PlusClient interface {
	GetMatches(ctx context.Context, in *GetMatchesRequest, opts ...grpc.CallOption) (*GetMatchesReply, error)
	GetMatch(ctx context.Context, in *GetMatchRequest, opts ...grpc.CallOption) (*Match, error)
	DeleteMatch(ctx context.Context, in *DeleteMatchRequest, opts ...grpc.CallOption) (*DeleteMatchReply, error)
	MarkID(ctx context.Context, in *MarkIDRequest, opts ...grpc.CallOption) (*MarkIDReply, error)
	SaveMatchToFile(ctx context.Context, in *SaveMatchToFileRequest, opts ...grpc.CallOption) (*SaveMatchToFileReply, error)
	LoadMatchFromFile(ctx context.Context, in *LoadMatchFromFileRequest, opts ...grpc.CallOption) (*LoadMatchFromFileReply, error)
}

type gOTV_PlusClient struct {
	cc *grpc.ClientConn
}

func NewGOTV_PlusClient(cc *grpc.ClientConn) GOTV_PlusClient {
	return &gOTV_PlusClient{cc}
}

func (c *gOTV_PlusClient) GetMatches(ctx context.Context, in *GetMatchesRequest, opts ...grpc.CallOption) (*GetMatchesReply, error) {
	out := new(GetMatchesReply)
	err := c.cc.Invoke(ctx, "/GOTV_PLUS.GOTV_Plus/GetMatches", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gOTV_PlusClient) GetMatch(ctx context.Context, in *GetMatchRequest, opts ...grpc.CallOption) (*Match, error) {
	out := new(Match)
	err := c.cc.Invoke(ctx, "/GOTV_PLUS.GOTV_Plus/GetMatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gOTV_PlusClient) DeleteMatch(ctx context.Context, in *DeleteMatchRequest, opts ...grpc.CallOption) (*DeleteMatchReply, error) {
	out := new(DeleteMatchReply)
	err := c.cc.Invoke(ctx, "/GOTV_PLUS.GOTV_Plus/DeleteMatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gOTV_PlusClient) MarkID(ctx context.Context, in *MarkIDRequest, opts ...grpc.CallOption) (*MarkIDReply, error) {
	out := new(MarkIDReply)
	err := c.cc.Invoke(ctx, "/GOTV_PLUS.GOTV_Plus/MarkID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gOTV_PlusClient) SaveMatchToFile(ctx context.Context, in *SaveMatchToFileRequest, opts ...grpc.CallOption) (*SaveMatchToFileReply, error) {
	out := new(SaveMatchToFileReply)
	err := c.cc.Invoke(ctx, "/GOTV_PLUS.GOTV_Plus/SaveMatchToFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gOTV_PlusClient) LoadMatchFromFile(ctx context.Context, in *LoadMatchFromFileRequest, opts ...grpc.CallOption) (*LoadMatchFromFileReply, error) {
	out := new(LoadMatchFromFileReply)
	err := c.cc.Invoke(ctx, "/GOTV_PLUS.GOTV_Plus/LoadMatchFromFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GOTV_PlusServer is the server API for GOTV_Plus service.
type GOTV_PlusServer interface {
	GetMatches(context.Context, *GetMatchesRequest) (*GetMatchesReply, error)
	GetMatch(context.Context, *GetMatchRequest) (*Match, error)
	DeleteMatch(context.Context, *DeleteMatchRequest) (*DeleteMatchReply, error)
	MarkID(context.Context, *MarkIDRequest) (*MarkIDReply, error)
	SaveMatchToFile(context.Context, *SaveMatchToFileRequest) (*SaveMatchToFileReply, error)
	LoadMatchFromFile(context.Context, *LoadMatchFromFileRequest) (*LoadMatchFromFileReply, error)
}

// UnimplementedGOTV_PlusServer can be embedded to have forward compatible implementations.
type UnimplementedGOTV_PlusServer struct {
}

func (*UnimplementedGOTV_PlusServer) GetMatches(ctx context.Context, req *GetMatchesRequest) (*GetMatchesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMatches not implemented")
}
func (*UnimplementedGOTV_PlusServer) GetMatch(ctx context.Context, req *GetMatchRequest) (*Match, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMatch not implemented")
}
func (*UnimplementedGOTV_PlusServer) DeleteMatch(ctx context.Context, req *DeleteMatchRequest) (*DeleteMatchReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMatch not implemented")
}
func (*UnimplementedGOTV_PlusServer) MarkID(ctx context.Context, req *MarkIDRequest) (*MarkIDReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MarkID not implemented")
}
func (*UnimplementedGOTV_PlusServer) SaveMatchToFile(ctx context.Context, req *SaveMatchToFileRequest) (*SaveMatchToFileReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveMatchToFile not implemented")
}
func (*UnimplementedGOTV_PlusServer) LoadMatchFromFile(ctx context.Context, req *LoadMatchFromFileRequest) (*LoadMatchFromFileReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoadMatchFromFile not implemented")
}

func RegisterGOTV_PlusServer(s *grpc.Server, srv GOTV_PlusServer) {
	s.RegisterService(&_GOTV_Plus_serviceDesc, srv)
}

func _GOTV_Plus_GetMatches_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMatchesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GOTV_PlusServer).GetMatches(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GOTV_PLUS.GOTV_Plus/GetMatches",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GOTV_PlusServer).GetMatches(ctx, req.(*GetMatchesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GOTV_Plus_GetMatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GOTV_PlusServer).GetMatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GOTV_PLUS.GOTV_Plus/GetMatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GOTV_PlusServer).GetMatch(ctx, req.(*GetMatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GOTV_Plus_DeleteMatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteMatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GOTV_PlusServer).DeleteMatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GOTV_PLUS.GOTV_Plus/DeleteMatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GOTV_PlusServer).DeleteMatch(ctx, req.(*DeleteMatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GOTV_Plus_MarkID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MarkIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GOTV_PlusServer).MarkID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GOTV_PLUS.GOTV_Plus/MarkID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GOTV_PlusServer).MarkID(ctx, req.(*MarkIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GOTV_Plus_SaveMatchToFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveMatchToFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GOTV_PlusServer).SaveMatchToFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GOTV_PLUS.GOTV_Plus/SaveMatchToFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GOTV_PlusServer).SaveMatchToFile(ctx, req.(*SaveMatchToFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GOTV_Plus_LoadMatchFromFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadMatchFromFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GOTV_PlusServer).LoadMatchFromFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GOTV_PLUS.GOTV_Plus/LoadMatchFromFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GOTV_PlusServer).LoadMatchFromFile(ctx, req.(*LoadMatchFromFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GOTV_Plus_serviceDesc = grpc.ServiceDesc{
	ServiceName: "GOTV_PLUS.GOTV_Plus",
	HandlerType: (*GOTV_PlusServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMatches",
			Handler:    _GOTV_Plus_GetMatches_Handler,
		},
		{
			MethodName: "GetMatch",
			Handler:    _GOTV_Plus_GetMatch_Handler,
		},
		{
			MethodName: "DeleteMatch",
			Handler:    _GOTV_Plus_DeleteMatch_Handler,
		},
		{
			MethodName: "MarkID",
			Handler:    _GOTV_Plus_MarkID_Handler,
		},
		{
			MethodName: "SaveMatchToFile",
			Handler:    _GOTV_Plus_SaveMatchToFile_Handler,
		},
		{
			MethodName: "LoadMatchFromFile",
			Handler:    _GOTV_Plus_LoadMatchFromFile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gotv_plus.proto",
}
