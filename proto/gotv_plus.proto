syntax = 'proto3';
package GOTV_PLUS;


import "google/protobuf/timestamp.proto";

service GOTV_Plus {
  rpc GetMatches(GetMatchesRequest) returns (GetMatchesReply) {}
  rpc GetMatch(GetMatchRequest) returns (Match) {}
  rpc DeleteMatch(DeleteMatchRequest) returns (DeleteMatchReply) {}
  rpc MarkID(MarkIDRequest) returns (MarkIDReply) {}
  rpc SaveMatchToFile(SaveMatchToFileRequest) returns (SaveMatchToFileReply) {}
  rpc LoadMatchFromFile(LoadMatchFromFileRequest) returns (LoadMatchFromFileReply) {}
}

message MatchBinary {
  string token = 1;
  string id = 2;
  uint32 signup_fragment = 3;
  repeated StartFrameBinary StartFrame = 4;
  repeated FullFrameBinary FullFrame = 5;
  repeated DeltaFrameBinary DeltaFrame = 6;
}

message StartFrameBinary {
  uint32 fragment = 1;
  uint32 tps = 2;
  string map = 3;
  uint32 protocol = 4;
  bytes body = 5;
  google.protobuf.Timestamp at = 6;
}

message FullFrameBinary {
  uint32 fragment = 1;
  uint64 tick = 2;
  bytes body = 3;
  google.protobuf.Timestamp at = 4;
}

message DeltaFrameBinary {
  uint32 fragment = 1;
  uint64 endtick = 2;
  bytes body = 3;
}

message Match {
  string token = 1;
  string id = 2;
}

message GetMatchesRequest {
  
}

message GetMatchesReply {
  repeated Match match = 1;
  bool error = 2;
  string errormessage = 3;
}

message GetMatchRequest {
  oneof ids {
    string token = 1;
    string id = 2;
  }  
}

message DeleteMatchRequest{
  oneof ids {
    string token = 1;
    string id = 2;
  } 
}

message DeleteMatchReply {
  bool error = 1;
  string errormessage = 2;
}


message MarkIDRequest {
  string token = 1;
  string id = 2;
}

message MarkIDReply {
  bool error = 1;
  string errormessage = 2;
}

message SaveMatchToFileRequest {
  oneof ids {
    string token = 1;
    string id = 2;
  }
  string path = 3;
}

message SaveMatchToFileReply {
  bool error = 1;
  string errormessage = 2;
}

message LoadMatchFromFileRequest {
  string token = 1;
}

message LoadMatchFromFileReply {
  string token = 1;
  bool error = 2;
  string errormessage = 3;
}